warning: LF will be replaced by CRLF in .gitignore.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in CHANGELOG.md.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in analysis_options.yaml.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in clean.sh.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in compile-upload-readme.sh.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in compile.sh.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in drawing.svg.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in lib/src/state/linker.dart.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in log.txt.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in remove_g.sh.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in up.sh.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in up_all.sh.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/.gitignore.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/examples/16_helix_origami_rectangle_idt.py.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/examples/4_helix_grid_none.py.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/examples/copy-from-python-package.sh.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/examples/output_designs/4_helix_grid_none.dna.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/autosizer/index.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/autosizer/vendor/detectElementResize.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/hammer.min.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pablo.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pablo.min.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/panzoom.min.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/polyfill.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/Pygments.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/biopython.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/console.html.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/docutils.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/matplotlib.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/mne.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/networkx.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/numpy.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/pandas.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/pyodide.asm.data.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/pyodide.asm.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/pyodide.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/pyodide_dev.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/pytz.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/renderedhtml.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/scikit-learn.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/sympy.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/test.html.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/test.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/webworker.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/pyodide/webworker_dev.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/react-dnd/ReactDnD.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/react-dnd/ReactDnD.min.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/react-dnd/ReactDnDHTML5Backend.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/react-svg-pan-zoom/prop-types.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/react-svg-pan-zoom/react-svg-pan-zoom.min.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/svg-pan-zoom.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/svg-pan-zoom.min.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/external-libs/xlsx.full.min.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/images/origami-icon.svg.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/main.dart.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/package-lock.json.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in web/pandoc.css.
The file will have its original line endings in your working directory
[1mdiff --git a/.gitattributes b/.gitattributes[m
[1mindex 46d9a1a..e2ad085 100644[m
[1m--- a/.gitattributes[m
[1m+++ b/.gitattributes[m
[36m@@ -1,5 +1,7 @@[m
 # Set the default behavior, in case people don't have core.autocrlf set.[m
 * text=auto[m
[32m+[m[32m#* text eol=crlf[m
[32m+[m[32m#* text eol=lf[m
 [m
 *.dart text[m
 *.txt text[m
[1mdiff --git a/code snippets.txt b/code snippets.txt[m
[1mindex d223e90..068073f 100644[m
[1m--- a/code snippets.txt[m	
[1m+++ b/code snippets.txt[m	
[36m@@ -19,6 +19,33 @@[m [mUiFactory<$CLASS_NAME$Props> Connected$CLASS_NAME$ =[m
 [m
 [m
 [m
[32m+[m
[32m+[m[32m// ord2Stless[m
[32m+[m
[32m+[m[32mFileName = snakeCase(MyComponent)[m
[32m+[m
[32m+[m[32mimport 'package:over_react/over_react.dart';[m
[32m+[m
[32m+[m[32mpart '$FileName$.over_react.g.dart';[m
[32m+[m
[32m+[m[32m@Factory()[m
[32m+[m[32mUiFactory<$MyComponent$Props> $MyComponent$ = _$$$MyComponent$;[m
[32m+[m
[32m+[m[32m@Props()[m
[32m+[m[32mclass _$$$MyComponent$Props extends UiProps {}[m
[32m+[m
[32m+[m[32m@Component2()[m
[32m+[m[32mclass $MyComponent$Component extends UiComponent2<$MyComponent$Props> {[m
[32m+[m[32m  @override[m
[32m+[m[32m  Map getDefaultProps() => (newProps());[m
[32m+[m
[32m+[m[32m  @override[m
[32m+[m[32m  render() {}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////[m
 // built_value[m
 [m
[1mdiff --git a/lib/src/actions/actions.dart b/lib/src/actions/actions.dart[m
[1mindex b8f3098..37e49e2 100644[m
[1m--- a/lib/src/actions/actions.dart[m
[1m+++ b/lib/src/actions/actions.dart[m
[36m@@ -9,7 +9,7 @@[m [mimport 'package:js/js.dart';[m
 import 'package:scadnano/src/state/bound_substrand.dart';[m
 import 'package:scadnano/src/state/crossover.dart';[m
 import 'package:scadnano/src/state/dna_end.dart';[m
[31m-import 'package:scadnano/src/state/dna_end_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_ends_move.dart';[m
 import 'package:scadnano/src/state/export_dna_format.dart';[m
 import 'package:scadnano/src/state/helix.dart';[m
 import 'package:scadnano/src/state/loopout.dart';[m
[36m@@ -19,6 +19,7 @@[m [mimport 'package:scadnano/src/state/selection_box.dart';[m
 import 'package:built_collection/built_collection.dart';[m
 import 'package:scadnano/src/state/strand.dart';[m
 import 'package:scadnano/src/state/strand_part.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strands_move.dart';[m
 [m
 //import '../state/substrand.dart';[m
 //import '../state/app_state.dart';[m
[36m@@ -969,7 +970,79 @@[m [mabstract class PotentialCrossoverRemove[m
 }[m
 [m
 /////////////////////////////////////////////////////////////////////////////////////////////////////////////[m
[31m-// dna end move[m
[32m+[m[32m// strands move[m
[32m+[m
[32m+[m[32mabstract class StrandsMoveStart[m
[32m+[m[32m    with BuiltJsonSerializable[m
[32m+[m[32m    implements Action, Built<StrandsMoveStart, StrandsMoveStartBuilder> {[m
[32m+[m[32m  int get offset;[m
[32m+[m
[32m+[m[32m  Helix get helix;[m
[32m+[m
[32m+[m[32m  /************************ begin BuiltValue boilerplate ************************/[m
[32m+[m[32m  factory StrandsMoveStart({int offset, Helix helix}) = _$StrandsMoveStart._;[m
[32m+[m
[32m+[m[32m  StrandsMoveStart._();[m
[32m+[m
[32m+[m[32m  static Serializer<StrandsMoveStart> get serializer => _$strandsMoveStartSerializer;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mabstract class StrandsMoveStop[m
[32m+[m[32m    with BuiltJsonSerializable[m
[32m+[m[32m    implements Action, Built<StrandsMoveStop, StrandsMoveStopBuilder> {[m
[32m+[m[32m  /************************ begin BuiltValue boilerplate ************************/[m
[32m+[m[32m  factory StrandsMoveStop() = _$StrandsMoveStop;[m
[32m+[m
[32m+[m[32m  StrandsMoveStop._();[m
[32m+[m
[32m+[m[32m  static Serializer<StrandsMoveStop> get serializer => _$strandsMoveStopSerializer;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mabstract class StrandsMoveSetSelectedStrands[m
[32m+[m[32m    with BuiltJsonSerializable[m
[32m+[m[32m    implements Action, Built<StrandsMoveSetSelectedStrands, StrandsMoveSetSelectedStrandsBuilder> {[m
[32m+[m[32m  BuiltList<Strand> get strands;[m
[32m+[m
[32m+[m[32m  int get delta;[m
[32m+[m
[32m+[m[32m  /************************ begin BuiltValue boilerplate ************************/[m
[32m+[m[32m  factory StrandsMoveSetSelectedStrands({BuiltList<Strand> strands, int delta}) =[m
[32m+[m[32m      _$StrandsMoveSetSelectedStrands._;[m
[32m+[m
[32m+[m[32m  StrandsMoveSetSelectedStrands._();[m
[32m+[m
[32m+[m[32m  static Serializer<StrandsMoveSetSelectedStrands> get serializer =>[m
[32m+[m[32m      _$strandsMoveSetSelectedStrandsSerializer;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mabstract class StrandsMoveAdjustOffset[m
[32m+[m[32m    with BuiltJsonSerializable[m
[32m+[m[32m    implements Action, Built<StrandsMoveAdjustOffset, StrandsMoveAdjustOffsetBuilder> {[m
[32m+[m[32m  int get offset;[m
[32m+[m
[32m+[m[32m  /************************ begin BuiltValue boilerplate ************************/[m
[32m+[m[32m  factory StrandsMoveAdjustOffset({int offset}) = _$StrandsMoveAdjustOffset._;[m
[32m+[m
[32m+[m[32m  StrandsMoveAdjustOffset._();[m
[32m+[m
[32m+[m[32m  static Serializer<StrandsMoveAdjustOffset> get serializer => _$strandsMoveAdjustOffsetSerializer;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mabstract class StrandsMoveCommit[m
[32m+[m[32m    with BuiltJsonSerializable[m
[32m+[m[32m    implements UndoableAction, Built<StrandsMoveCommit, StrandsMoveCommitBuilder> {[m
[32m+[m[32m  StrandsMove get strands_move;[m
[32m+[m
[32m+[m[32m  /************************ begin BuiltValue boilerplate ************************/[m
[32m+[m[32m  factory StrandsMoveCommit({StrandsMove strands_move}) = _$StrandsMoveCommit._;[m
[32m+[m
[32m+[m[32m  StrandsMoveCommit._();[m
[32m+[m
[32m+[m[32m  static Serializer<StrandsMoveCommit> get serializer => _$strandsMoveCommitSerializer;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/////////////////////////////////////////////////////////////////////////////////////////////////////////////[m
[32m+[m[32m// dna ends move[m
 [m
 abstract class DNAEndsMoveStart[m
     with BuiltJsonSerializable[m
[36m@@ -986,6 +1059,11 @@[m [mabstract class DNAEndsMoveStart[m
   static Serializer<DNAEndsMoveStart> get serializer => _$dNAEndsMoveStartSerializer;[m
 }[m
 [m
[32m+[m[32m/// This action is needed because [DNAEndsMoveStart] doesn't have enough information to find the set[m
[32m+[m[32m/// of selected ends, and because we process the subsequent actions as a [FactAction] with an[m
[32m+[m[32m/// optimized store, it doesn't have access to the full store either. So middleware on the full store[m
[32m+[m[32m/// processes the [DNAEndsMoveStart] in order to find the selected ends and put them into the[m
[32m+[m[32m/// [DNAEndMove]'s of this action.[m
 abstract class DNAEndsMoveSetSelectedEnds[m
     with BuiltJsonSerializable[m
     implements Action, Built<DNAEndsMoveSetSelectedEnds, DNAEndsMoveSetSelectedEndsBuilder> {[m
[1mdiff --git a/lib/src/app.dart b/lib/src/app.dart[m
[1mindex 325e375..a97aa02 100644[m
[1m--- a/lib/src/app.dart[m
[1m+++ b/lib/src/app.dart[m
[36m@@ -14,7 +14,7 @@[m [mimport 'package:over_react/over_react.dart' as react;[m
 [m
 import 'package:scadnano/src/middleware/throttle.dart';[m
 import 'package:scadnano/src/state/app_ui_state.dart';[m
[31m-import 'package:scadnano/src/state/dna_end_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_ends_move.dart';[m
 import 'package:scadnano/src/state/potential_crossover.dart';[m
 import 'actions/actions.dart';[m
 import 'reducers/dna_ends_move_reducer.dart';[m
[1mdiff --git a/lib/src/middleware/all_middleware.dart b/lib/src/middleware/all_middleware.dart[m
[1mindex 1275753..25bee33 100644[m
[1m--- a/lib/src/middleware/all_middleware.dart[m
[1m+++ b/lib/src/middleware/all_middleware.dart[m
[36m@@ -5,13 +5,14 @@[m [mimport 'dna_ends_move_start.dart';[m
 import 'insertion_deletion_pairing.dart';[m
 import 'load_file.dart';[m
 import 'reselect_moved_dna_ends.dart';[m
[32m+[m[32mimport 'reselect_moved_strands.dart';[m
 import 'save_file.dart';[m
[31m-import '../state/app_state.dart';[m
 import 'export_svg.dart';[m
 import 'local_storage.dart';[m
 import 'throttle.dart';[m
[31m-import 'thunk.dart';[m
 import 'helix_remove.dart';[m
[32m+[m[32m//import 'thunk.dart';[m
[32m+[m[32mimport '../state/app_state.dart';[m
 [m
 final all_middleware = List<Middleware<AppState>>.unmodifiable([[m
   local_storage_middleware,[m
[36m@@ -20,10 +21,11 @@[m [mfinal all_middleware = List<Middleware<AppState>>.unmodifiable([[m
   save_file_middleware,[m
   load_file_middleware,[m
   throttle_middleware,[m
[31m-  thunk_middleware,[m
[32m+[m[32m//  thunk_middleware,[m
   helix_remove_middleware,[m
   dna_ends_move_start_middleware,[m
   export_dna_sequences_middleware,[m
[31m-  reselect_moved_dna_ends_middleware,[m
   insertion_deletion_pairing_middleware,[m
[32m+[m[32m  reselect_moved_dna_ends_middleware,[m
[32m+[m[32m  reselect_moved_strands_middleware,[m
 ]);[m
[1mdiff --git a/lib/src/middleware/dna_ends_move_start.dart b/lib/src/middleware/dna_ends_move_start.dart[m
[1mindex 82b966e..9040e05 100644[m
[1m--- a/lib/src/middleware/dna_ends_move_start.dart[m
[1m+++ b/lib/src/middleware/dna_ends_move_start.dart[m
[36m@@ -5,7 +5,7 @@[m [mimport 'package:redux/redux.dart';[m
 import 'package:scadnano/src/state/bound_substrand.dart';[m
 import 'package:scadnano/src/state/dna_design.dart';[m
 import 'package:scadnano/src/state/dna_end.dart';[m
[31m-import 'package:scadnano/src/state/dna_end_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_ends_move.dart';[m
 import 'package:scadnano/src/state/helix.dart';[m
 import 'package:scadnano/src/state/strand.dart';[m
 [m
[1mdiff --git a/lib/src/middleware/reselect_moved_dna_ends.dart b/lib/src/middleware/reselect_moved_dna_ends.dart[m
[1mindex 95bb594..424038f 100644[m
[1m--- a/lib/src/middleware/reselect_moved_dna_ends.dart[m
[1m+++ b/lib/src/middleware/reselect_moved_dna_ends.dart[m
[36m@@ -3,7 +3,7 @@[m [mimport 'package:built_collection/built_collection.dart';[m
 [m
 import 'package:scadnano/src/state/bound_substrand.dart';[m
 import 'package:scadnano/src/state/dna_end.dart';[m
[31m-import 'package:scadnano/src/state/dna_end_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_ends_move.dart';[m
 import 'package:tuple/tuple.dart';[m
 import '../actions/actions.dart' as actions;[m
 import '../state/app_state.dart';[m
[1mdiff --git a/lib/src/middleware/reselect_moved_strands.dart b/lib/src/middleware/reselect_moved_strands.dart[m
[1mindex 424038f..57a8e41 100644[m
[1m--- a/lib/src/middleware/reselect_moved_strands.dart[m
[1m+++ b/lib/src/middleware/reselect_moved_strands.dart[m
[36m@@ -1,21 +1,21 @@[m
 import 'package:redux/redux.dart';[m
 import 'package:built_collection/built_collection.dart';[m
[32m+[m[32mimport 'package:tuple/tuple.dart';[m
 [m
 import 'package:scadnano/src/state/bound_substrand.dart';[m
 import 'package:scadnano/src/state/dna_end.dart';[m
[31m-import 'package:scadnano/src/state/dna_ends_move.dart';[m
[31m-import 'package:tuple/tuple.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strand.dart';[m
 import '../actions/actions.dart' as actions;[m
 import '../state/app_state.dart';[m
 [m
[31m-reselect_moved_dna_ends_middleware(Store<AppState> store, action, NextDispatcher next) {[m
[32m+[m[32mreselect_moved_strands_middleware(Store<AppState> store, action, NextDispatcher next) {[m
   List<Tuple3<int, int, bool>> addresses = [];[m
[31m-  if (action is actions.DNAEndsMoveCommit) {[m
[32m+[m[32m  if (action is actions.StrandsMoveCommit) {[m
     // first collect addresses while dna_design.end_to_substrand is still valid[m
[31m-    for (DNAEndMove move in action.dna_ends_move.moves) {[m
[31m-      DNAEnd old_end = move.dna_end;[m
[31m-      BoundSubstrand old_substrand = store.state.dna_design.end_to_substrand[old_end];[m
[31m-      int new_offset = action.dna_ends_move.current_capped_offset_of(old_end);[m
[32m+[m[32m    for (Strand strand in action.strands_move.strands_moving) {[m
[32m+[m[32m      BoundSubstrand old_substrand = strand.first_bound_substrand();[m
[32m+[m[32m      DNAEnd old_5p_end = old_substrand.dnaend_5p;[m
[32m+[m[32m      int new_offset = old_5p_end.offset_inclusive + action.strands_move.delta;[m
       addresses.add(Tuple3<int, int, bool>(old_substrand.helix, new_offset, old_substrand.forward));[m
     }[m
   }[m
[36m@@ -23,14 +23,14 @@[m [mreselect_moved_dna_ends_middleware(Store<AppState> store, action, NextDispatcher[m
   // then apply action[m
   next(action);[m
 [m
[31m-  if (action is actions.DNAEndsMoveCommit) {[m
[32m+[m[32m  if (action is actions.StrandsMoveCommit) {[m
     // now find new ends at given addresses[m
[31m-    List<DNAEnd> new_ends = [];[m
[32m+[m[32m    List<Strand> new_strands = [];[m
     for (var address in addresses) {[m
[31m-      DNAEnd new_end = store.state.dna_design.address_to_end[address];[m
[31m-      new_ends.add(new_end);[m
[32m+[m[32m      Strand new_strand = store.state.dna_design.address_5p_to_strand[address];[m
[32m+[m[32m      new_strands.add(new_strand);[m
     }[m
[31m-    store.dispatch(actions.SelectAll(selectables: new_ends.toBuiltList(), only: true));[m
[32m+[m[32m    store.dispatch(actions.SelectAll(selectables: new_strands.toBuiltList(), only: true));[m
   }[m
   [m
 }[m
[1mdiff --git a/lib/src/reducers/app_state_reducer.dart b/lib/src/reducers/app_state_reducer.dart[m
[1mindex 9349286..17d8ff9 100644[m
[1m--- a/lib/src/reducers/app_state_reducer.dart[m
[1m+++ b/lib/src/reducers/app_state_reducer.dart[m
[36m@@ -34,7 +34,7 @@[m [mAppState app_state_reducer(AppState state, action) {[m
   // "local" reducers can operate on one slice of the state and need only read that same slice[m
   state = state.rebuild((m) => m[m
     ..dna_design = dna_design_reducer(state.dna_design, action)?.toBuilder()[m
[31m-    ..ui_state.replace(ui_state_reducer(state.ui_state, action))[m
[32m+[m[32m    ..ui_state.replace(ui_state_local_reducer(state.ui_state, action))[m
     ..error_message =[m
         TypedReducer<String, actions.ErrorMessageSet>(error_message_reducer)(state.error_message, action)[m
     ..editor_content = editor_content_reducer(state.editor_content, action));[m
[1mdiff --git a/lib/src/reducers/app_ui_state_reducer.dart b/lib/src/reducers/app_ui_state_reducer.dart[m
[1mindex d76c668..5090f2f 100644[m
[1m--- a/lib/src/reducers/app_ui_state_reducer.dart[m
[1m+++ b/lib/src/reducers/app_ui_state_reducer.dart[m
[36m@@ -8,6 +8,7 @@[m [mimport '../state/mouseover_data.dart';[m
 import '../reducers/select_mode_state_reducer.dart';[m
 import '../reducers/edit_modes_reducer.dart';[m
 import '../actions/actions.dart' as actions;[m
[32m+[m[32mimport 'strands_move_reducer.dart';[m
 import 'util_reducer.dart';[m
 import 'selection_reducer.dart';[m
 import 'mouseover_datas_reducer.dart';[m
[36m@@ -17,7 +18,7 @@[m [mimport 'mouseover_datas_reducer.dart';[m
 // ui state local reducer[m
 // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[m
 [m
[31m-AppUIState ui_state_reducer(AppUIState ui_state, action) => ui_state.rebuild((u) => u[m
[32m+[m[32mAppUIState ui_state_local_reducer(AppUIState ui_state, action) => ui_state.rebuild((u) => u[m
   ..changed_since_last_save = changed_since_last_save_reducer(ui_state.changed_since_last_save, action)[m
   ..select_mode_state.replace(select_mode_state_reducer(ui_state.select_mode_state, action))[m
   ..edit_modes.replace(edit_modes_reducer(ui_state.edit_modes, action))[m
[36m@@ -30,6 +31,7 @@[m [mAppUIState ui_state_reducer(AppUIState ui_state, action) => ui_state.rebuild((u)[m
   ..moving_dna_ends = moving_dna_ends_reducer(ui_state.moving_dna_ends, action)[m
   ..side_selected_helix_idxs.replace(side_selected_helices_reducer(ui_state.side_selected_helix_idxs, action))[m
   ..selectables_store.replace(selectables_store_reducer(ui_state.selectables_store, action))[m
[32m+[m[32m  ..strands_move = strands_move_local_reducer(ui_state.strands_move, action)?.toBuilder()[m
   ..side_view_grid_position_mouse_cursor =[m
       side_view_mouse_grid_pos_reducer(ui_state.side_view_grid_position_mouse_cursor, action)?.toBuilder()[m
 //  ..selection_box_main_view = main_view_selection_box_reducer(ui_state.selection_box_main_view, action)?.toBuilder()[m
[36m@@ -107,11 +109,12 @@[m [mGridPosition side_view_mouse_grid_pos_clear_reducer([m
 // ui state global reducer[m
 // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[m
 [m
[31m-AppUIState ui_state_global_reducer(AppUIState ui_state, AppState model, action) => ui_state.rebuild((u) => u[m
[31m-  ..mouseover_datas.replace(mouseover_datas_global_reducer(ui_state.mouseover_datas, model, action))[m
[32m+[m[32mAppUIState ui_state_global_reducer(AppUIState ui_state, AppState state, action) => ui_state.rebuild((u) => u[m
[32m+[m[32m  ..mouseover_datas.replace(mouseover_datas_global_reducer(ui_state.mouseover_datas, state, action))[m
[32m+[m[32m  ..strands_move = strands_move_global_reducer(ui_state.strands_move, state, action)?.toBuilder()[m
   ..side_selected_helix_idxs[m
[31m-      .replace(side_selected_helices_global_reducer(ui_state.side_selected_helix_idxs, model, action))[m
[31m-  ..selectables_store.replace(selectables_store_global_reducer(ui_state.selectables_store, model, action)));[m
[32m+[m[32m      .replace(side_selected_helices_global_reducer(ui_state.side_selected_helix_idxs, state, action))[m
[32m+[m[32m  ..selectables_store.replace(selectables_store_global_reducer(ui_state.selectables_store, state, action)));[m
 [m
 GlobalReducer<BuiltList<MouseoverData>, AppState> mouseover_datas_global_reducer = combineGlobalReducers([[m
   TypedGlobalReducer<BuiltList<MouseoverData>, AppState, actions.HelixRotationSet>([m
[1mdiff --git a/lib/src/reducers/dna_ends_move_reducer.dart b/lib/src/reducers/dna_ends_move_reducer.dart[m
[1mindex 1ea6ab1..2fa355d 100644[m
[1m--- a/lib/src/reducers/dna_ends_move_reducer.dart[m
[1m+++ b/lib/src/reducers/dna_ends_move_reducer.dart[m
[36m@@ -1,5 +1,5 @@[m
 import 'package:redux/redux.dart';[m
[31m-import 'package:scadnano/src/state/dna_end_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_ends_move.dart';[m
 [m
 import '../actions/actions.dart' as actions;[m
 [m
[1mdiff --git a/lib/src/reducers/strands_move_reducer.dart b/lib/src/reducers/strands_move_reducer.dart[m
[1mindex e69de29..6bca3d6 100644[m
[1m--- a/lib/src/reducers/strands_move_reducer.dart[m
[1m+++ b/lib/src/reducers/strands_move_reducer.dart[m
[36m@@ -0,0 +1,113 @@[m
[32m+[m[32mimport 'dart:math';[m
[32m+[m
[32m+[m[32mimport 'package:built_collection/built_collection.dart';[m
[32m+[m[32mimport 'package:redux/redux.dart';[m
[32m+[m[32mimport 'package:scadnano/src/reducers/util_reducer.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/app_state.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/bound_substrand.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_design.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/helix.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strand.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strands_move.dart';[m
[32m+[m[32mimport '../actions/actions.dart' as actions;[m
[32m+[m
[32m+[m[32mGlobalReducer<StrandsMove, AppState> strands_move_global_reducer = combineGlobalReducers([[m
[32m+[m[32m  TypedGlobalReducer<StrandsMove, AppState, actions.StrandsMoveStart>(strands_move_start_reducer),[m
[32m+[m[32m  TypedGlobalReducer<StrandsMove, AppState, actions.StrandsMoveAdjustOffset>(strands_adjust_offset_reducer),[m
[32m+[m[32m]);[m
[32m+[m
[32m+[m[32mReducer<StrandsMove> strands_move_local_reducer = combineReducers([[m
[32m+[m[32m  TypedReducer<StrandsMove, actions.StrandsMoveStop>(strands_move_stop_reducer),[m
[32m+[m[32m]);[m
[32m+[m
[32m+[m[32mStrandsMove strands_move_start_reducer([m
[32m+[m[32m    StrandsMove strands_move, AppState state, actions.StrandsMoveStart action) {[m
[32m+[m[32m  BuiltList<Strand> selected_strands =[m
[32m+[m[32m      BuiltList<Strand>(state.ui_state.selectables_store.selected_items.where((s) => s is Strand));[m
[32m+[m[32m  return StrandsMove([m
[32m+[m[32m      strands_moving: selected_strands,[m
[32m+[m[32m      all_strands: state.dna_design.strands,[m
[32m+[m[32m      original_offset: action.offset,[m
[32m+[m[32m      helix: action.helix,[m
[32m+[m[32m      helices: state.dna_design.helices,[m
[32m+[m[32m      copy: false);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mStrandsMove strands_move_stop_reducer(StrandsMove strands_move, actions.StrandsMoveStop action) => null;[m
[32m+[m
[32m+[m[32mStrandsMove strands_adjust_offset_reducer([m
[32m+[m[32m    StrandsMove strands_move, AppState state, actions.StrandsMoveAdjustOffset action) {[m
[32m+[m[32m  strands_move = strands_move.rebuild((b) => b..current_offset = action.offset);[m
[32m+[m[32m  bool allowable = is_allowable(strands_move);[m
[32m+[m[32m  return strands_move.rebuild((b) => b..allowable = allowable);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mbool is_allowable(StrandsMove strands_move) {[m
[32m+[m[32m  int delta = strands_move.delta;[m
[32m+[m[32m  if (delta == 0) {[m
[32m+[m[32m    return true;[m
[32m+[m[32m  }[m
[32m+[m[32m  int num_helices = strands_move.helix_idx_to_substrands_moving.length;[m
[32m+[m[32m  for (int helix_idx = 0; helix_idx < num_helices; helix_idx++) {[m
[32m+[m[32m    Helix helix = strands_move.helices[helix_idx];[m
[32m+[m[32m    var substrands_moving = strands_move.helix_idx_to_substrands_moving[helix_idx];[m
[32m+[m[32m    var substrands_fixed = strands_move.helix_idx_to_substrands_fixed[helix_idx];[m
[32m+[m[32m    for (bool forward in [true, false]) {[m
[32m+[m[32m      List<Point<int>> intervals_moving = substrands_moving[m
[32m+[m[32m          .where((ss) => ss.forward == forward)[m
[32m+[m[32m          .map((ss) => Point<int>(ss.start + delta, ss.end - 1 + delta))[m
[32m+[m[32m          .toList();[m
[32m+[m[32m      if (intervals_moving.isNotEmpty) {[m
[32m+[m[32m        if (intervals_moving[0].x < helix.min_offset) {[m
[32m+[m[32m          return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (intervals_moving[intervals_moving.length - 1].y >= helix.max_offset) {[m
[32m+[m[32m          return false;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      List<Point<int>> intervals_fixed = substrands_fixed[m
[32m+[m[32m          .where((ss) => ss.forward == forward)[m
[32m+[m[32m          .map((ss) => Point<int>(ss.start, ss.end - 1))[m
[32m+[m[32m          .toList();[m
[32m+[m[32m      if (intersection(intervals_moving, intervals_fixed)) {[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return true;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/// Indicate if any of the intervals in ints1 intersect any of the intervals in ints2. Assume each[m
[32m+[m[32m/// is disjoint within itself (i.e., no two intervals in ints1 intersection, and no two intervals[m
[32m+[m[32m/// within ints2 intersect). and that each is sorted by start point[m
[32m+[m[32m/// (thus also by end point by disjointness.)[m
[32m+[m[32m/// These interavls are INCLUSIVE on both sides.[m
[32m+[m[32mbool intersection(List<Point<int>> ints1, List<Point<int>> ints2) {[m
[32m+[m[32m//  print('  ints1: $ints1');[m
[32m+[m[32m//  print('  ints2: $ints2');[m
[32m+[m[32m  int idx1 = 0;[m
[32m+[m[32m  int idx2 = 0;[m
[32m+[m[32m  while (idx1 < ints1.length && idx2 < ints2.length) {[m
[32m+[m[32m    // step through interavls in ints2 until one is found that might intersect int1[m
[32m+[m[32m    while (idx2 < ints2.length && ints2[idx2].y < ints1[idx1].x) {[m
[32m+[m[32m      idx2++;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (idx2 == ints2.length) {[m
[32m+[m[32m      return false; // if we ran out of intervals in ints2, we're done[m
[32m+[m[32m    } else if (ints2[idx2].x <= ints1[idx1].y) {[m
[32m+[m[32m      return true; // o/w check for intersection[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // step through interavls in ints1 until one is found that might intersect int2[m
[32m+[m[32m    while (idx1 < ints1.length && ints1[idx1].y < ints2[idx2].x) {[m
[32m+[m[32m      idx1++;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (idx1 == ints1.length) {[m
[32m+[m[32m      return false; // if we ran out of intervals in ints2, we're done[m
[32m+[m[32m    } else if (ints1[idx1].x <= ints2[idx2].y) {[m
[32m+[m[32m      return true; // o/w check for intersection[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return false;[m
[32m+[m[32m}[m
[1mdiff --git a/lib/src/reducers/strands_reducer.dart b/lib/src/reducers/strands_reducer.dart[m
[1mindex 87506f9..8ec9ab8 100644[m
[1m--- a/lib/src/reducers/strands_reducer.dart[m
[1m+++ b/lib/src/reducers/strands_reducer.dart[m
[36m@@ -5,7 +5,8 @@[m [mimport 'package:redux/redux.dart';[m
 import 'package:scadnano/src/state/app_state.dart';[m
 import 'package:scadnano/src/state/bound_substrand.dart';[m
 import 'package:scadnano/src/state/dna_end.dart';[m
[31m-import 'package:scadnano/src/state/dna_end_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_ends_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strands_move.dart';[m
 import 'package:scadnano/src/state/substrand.dart';[m
 [m
 import '../state/strand.dart';[m
[36m@@ -18,7 +19,8 @@[m [mimport 'nick_join_reducers.dart';[m
 import 'util_reducer.dart';[m
 [m
 Reducer<BuiltList<Strand>> strands_local_reducer = combineReducers([[m
[31m-  TypedReducer<BuiltList<Strand>, actions.DNAEndsMoveCommit>(strands_dna_ends_move_stop_reducer),[m
[32m+[m[32m  TypedReducer<BuiltList<Strand>, actions.DNAEndsMoveCommit>(strands_dna_ends_move_commit_reducer),[m
[32m+[m[32m  TypedReducer<BuiltList<Strand>, actions.StrandsMoveCommit>(strands_move_commit_reducer),[m
   TypedReducer<BuiltList<Strand>, actions.AssignDNA>(assign_dna_reducer),[m
 ]);[m
 [m
[36m@@ -53,10 +55,51 @@[m [mReducer<Strand> strand_part_reducer = combineReducers([[m
   TypedReducer<Strand, actions.InsertionOrDeletionAction>(insertion_deletion_reducer),[m
 ]);[m
 [m
[32m+[m[32m///////////////////////////////////////////////////////////////////////////////////////////////////////////[m
[32m+[m[32m// move strands[m
[32m+[m
[32m+[m[32mBuiltList<Strand> strands_move_commit_reducer(BuiltList<Strand> strands, actions.StrandsMoveCommit action) {[m
[32m+[m[32m  if (action.strands_move.allowable && action.strands_move.is_nontrivial) {[m
[32m+[m[32m    var strands_builder = strands.toBuilder();[m
[32m+[m[32m    for (var strand in action.strands_move.strands_moving) {[m
[32m+[m[32m      int strand_idx = strands.indexOf(strand);[m
[32m+[m[32m      strand = single_strand_commit_stop_reducer(strand, action.strands_move);[m
[32m+[m[32m      strand = strand.initialize();[m
[32m+[m[32m      strands_builder[strand_idx] = strand;[m
[32m+[m[32m    }[m
[32m+[m[32m    return strands_builder.build();[m
[32m+[m[32m  } else {[m
[32m+[m[32m    return strands;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mStrand single_strand_commit_stop_reducer(Strand strand, StrandsMove strands_move) {[m
[32m+[m[32m  List<Substrand> substrands = strand.substrands.toList();[m
[32m+[m[32m  for (int i = 0; i < substrands.length; i++) {[m
[32m+[m[32m    Substrand substrand = substrands[i];[m
[32m+[m[32m    Substrand new_substrand = substrand;[m
[32m+[m[32m    if (substrand is BoundSubstrand) {[m
[32m+[m[32m      BoundSubstrand bound_ss = substrand;[m
[32m+[m[32m      for (var dnaend in [substrand.dnaend_start, substrand.dnaend_end]) {[m
[32m+[m[32m        int new_offset = dnaend.offset_inclusive + strands_move.delta;[m
[32m+[m[32m        bound_ss = bound_ss.rebuild([m
[32m+[m[32m            (b) => dnaend == substrand.dnaend_start ? (b..start = new_offset) : (b..end = new_offset + 1));[m
[32m+[m[32m        List<int> remaining_deletions = get_remaining_deletions(substrand, new_offset, dnaend);[m
[32m+[m[32m        List<Insertion> remaining_insertions = get_remaining_insertions(substrand, new_offset, dnaend);[m
[32m+[m[32m        bound_ss = bound_ss.rebuild([m
[32m+[m[32m            (b) => b..deletions.replace(remaining_deletions)..insertions.replace(remaining_insertions));[m
[32m+[m[32m      }[m
[32m+[m[32m      new_substrand = bound_ss;[m
[32m+[m[32m    }[m
[32m+[m[32m    substrands[i] = new_substrand;[m
[32m+[m[32m  }[m
[32m+[m[32m  return strand.rebuild((b) => b..substrands.replace(substrands));[m
[32m+[m[32m}[m
[32m+[m
 ///////////////////////////////////////////////////////////////////////////////////////////////////////////[m
 // move DNA ends[m
 [m
[31m-BuiltList<Strand> strands_dna_ends_move_stop_reducer([m
[32m+[m[32mBuiltList<Strand> strands_dna_ends_move_commit_reducer([m
     BuiltList<Strand> strands, actions.DNAEndsMoveCommit action) {[m
   DNAEndsMove move = action.dna_ends_move;[m
   if (move.current_offset == move.original_offset) {[m
[36m@@ -65,15 +108,14 @@[m [mBuiltList<Strand> strands_dna_ends_move_stop_reducer([m
   var strands_builder = strands.toBuilder();[m
   for (var strand in action.dna_ends_move.strands_affected) {[m
     int strand_idx = strands.indexOf(strand);[m
[31m-    strand = single_strand_dna_ends_move_stop_reducer(strand, move);[m
[32m+[m[32m    strand = single_strand_dna_ends_commit_stop_reducer(strand, move);[m
     strand = strand.initialize();[m
     strands_builder[strand_idx] = strand;[m
   }[m
   return strands_builder.build();[m
 }[m
 [m
[31m-Strand single_strand_dna_ends_move_stop_reducer(Strand strand, DNAEndsMove all_move) {[m
[31m-//  int delta = all_move.current_offset - all_move.original_offset;[m
[32m+[m[32mStrand single_strand_dna_ends_commit_stop_reducer(Strand strand, DNAEndsMove all_move) {[m
   List<Substrand> substrands = strand.substrands.toList();[m
   for (int i = 0; i < substrands.length; i++) {[m
     Substrand substrand = substrands[i];[m
[36m@@ -84,7 +126,6 @@[m [mStrand single_strand_dna_ends_move_stop_reducer(Strand strand, DNAEndsMove all_m[m
         DNAEndMove move = find_move(all_move.moves, dnaend);[m
         if (move != null) {[m
           int new_offset = all_move.current_capped_offset_of(dnaend);[m
[31m-//          int new_offset = adjust_offset(dnaend, move, delta);[m
           bound_ss = bound_ss.rebuild([m
               (b) => dnaend == substrand.dnaend_start ? (b..start = new_offset) : (b..end = new_offset + 1));[m
           List<int> remaining_deletions = get_remaining_deletions(substrand, new_offset, dnaend);[m
[1mdiff --git a/lib/src/serializers.dart b/lib/src/serializers.dart[m
[1mindex 75a3fc2..415be8a 100644[m
[1m--- a/lib/src/serializers.dart[m
[1m+++ b/lib/src/serializers.dart[m
[36m@@ -7,12 +7,13 @@[m [mimport 'package:color/color.dart';[m
 [m
 import 'actions/actions.dart';[m
 import 'state/dna_end.dart';[m
[31m-import 'state/dna_end_move.dart';[m
[32m+[m[32mimport 'state/dna_ends_move.dart';[m
 import 'state/edit_mode.dart';[m
 import 'state/export_dna_format.dart';[m
 import 'state/potential_crossover.dart';[m
 import 'state/selectable.dart';[m
 import 'state/app_ui_state.dart';[m
[32m+[m[32mimport 'state/strands_move.dart';[m
 import 'state/substrand.dart';[m
 import 'state/grid.dart';[m
 import 'state/helix.dart';[m
[36m@@ -98,13 +99,6 @@[m [mpart 'serializers.g.dart';[m
   PotentialCrossoverCreate,[m
   PotentialCrossoverMove,[m
   PotentialCrossoverRemove,[m
[31m-  DNAEndMove,[m
[31m-  DNAEndsMove,[m
[31m-  DNAEndsMoveStart,[m
[31m-  DNAEndsMoveSetSelectedEnds,[m
[31m-  DNAEndsMoveAdjustOffset,[m
[31m-  DNAEndsMoveStop,[m
[31m-  DNAEndsMoveCommit,[m
   AssignDNA,[m
   ExportDNA,[m
   ExportDNAFormat,[m
[36m@@ -114,6 +108,19 @@[m [mpart 'serializers.g.dart';[m
   InsertionRemove,[m
   DeletionRemove,[m
   InsertionLengthChange,[m
[32m+[m[32m  DNAEndMove,[m
[32m+[m[32m  DNAEndsMove,[m
[32m+[m[32m  DNAEndsMoveStart,[m
[32m+[m[32m  DNAEndsMoveStop,[m
[32m+[m[32m  DNAEndsMoveSetSelectedEnds,[m
[32m+[m[32m  DNAEndsMoveAdjustOffset,[m
[32m+[m[32m  DNAEndsMoveCommit,[m
[32m+[m[32m  StrandsMove,[m
[32m+[m[32m  StrandsMoveStart,[m
[32m+[m[32m  StrandsMoveStop,[m
[32m+[m[32m  StrandsMoveSetSelectedStrands,[m
[32m+[m[32m  StrandsMoveAdjustOffset,[m
[32m+[m[32m  StrandsMoveCommit,[m
 ])[m
 Serializers serializers = _$serializers;[m
 [m
[1mdiff --git a/lib/src/state/app_ui_state.dart b/lib/src/state/app_ui_state.dart[m
[1mindex c864f33..1eca75f 100644[m
[1m--- a/lib/src/state/app_ui_state.dart[m
[1m+++ b/lib/src/state/app_ui_state.dart[m
[36m@@ -1,4 +1,3 @@[m
[31m-[m
 import 'package:built_collection/built_collection.dart';[m
 import 'package:built_value/serializer.dart';[m
 import 'package:built_value/built_value.dart';[m
[36m@@ -10,7 +9,7 @@[m [mimport 'mouseover_data.dart';[m
 import 'select_mode_state.dart';[m
 import 'edit_mode.dart';[m
 import 'selectable.dart';[m
[31m-[m
[32m+[m[32mimport 'strands_move.dart';[m
 [m
 part 'app_ui_state.g.dart';[m
 [m
[36m@@ -30,6 +29,7 @@[m [mfinal DEFAULT_AppUIStateBuilder = AppUIStateBuilder()[m
   ..moving_dna_ends = false[m
   ..changed_since_last_save = false[m
   ..side_view_grid_position_mouse_cursor = null[m
[32m+[m[32m  ..strands_move = null[m
   ..select_mode_state = DEFAULT_SelectModeStateBuilder;[m
 [m
 final DEFAULT_AppUIState = DEFAULT_AppUIStateBuilder.build();[m
[36m@@ -60,6 +60,9 @@[m [mabstract class AppUIState with BuiltJsonSerializable implements Built<AppUIState[m
 [m
   String get loaded_script_filename;[m
 [m
[32m+[m[32m  @nullable[m
[32m+[m[32m  StrandsMove get strands_move;[m
[32m+[m
   bool get show_dna;[m
 [m
   bool get show_mismatches;[m
[36m@@ -85,7 +88,6 @@[m [mabstract class AppUIState with BuiltJsonSerializable implements Built<AppUIState[m
 [m
   /// Save button is enabled iff this is true[m
   bool get changed_since_last_save;[m
[31m-[m
 }[m
 [m
 const DEFAULT_FILENAME_NO_EXT = 'default_dna_filename';[m
[1mdiff --git a/lib/src/state/dna_design.dart b/lib/src/state/dna_design.dart[m
[1mindex 33f6ad7..f7ecfad 100644[m
[1m--- a/lib/src/state/dna_design.dart[m
[1m+++ b/lib/src/state/dna_design.dart[m
[36m@@ -197,8 +197,8 @@[m [mabstract class DNADesign implements Built<DNADesign, DNADesignBuilder>, JSONSeri[m
   Strand end_to_strand(DNAEnd end) => substrand_to_strand[end_to_substrand[end]];[m
 [m
   @memoized[m
[31m-  BuiltList<BuiltSet<BoundSubstrand>> get helix_idx_to_substrands {[m
[31m-    return _construct_helix_idx_to_substrands_map(helices.length, strands);[m
[32m+[m[32m  BuiltList<BuiltList<BoundSubstrand>> get helix_idx_to_substrands {[m
[32m+[m[32m    return construct_helix_idx_to_substrands_map(helices.length, strands);[m
   }[m
 [m
   @memoized[m
[36m@@ -240,6 +240,19 @@[m [mabstract class DNADesign implements Built<DNADesign, DNADesignBuilder>, JSONSeri[m
     return map.build();[m
   }[m
 [m
[32m+[m[32m  /// Gets Strand with 5p end at given address (helix,offset,forward)[m
[32m+[m[32m  /// Offset is inclusive, i.e., dna_end.offset_inclusive[m
[32m+[m[32m  @memoized[m
[32m+[m[32m  BuiltMap<Tuple3<int, int, bool>, Strand> get address_5p_to_strand {[m
[32m+[m[32m    var map = Map<Tuple3<int, int, bool>, Strand>();[m
[32m+[m[32m    for (var strand in strands) {[m
[32m+[m[32m      var ss = strand.first_bound_substrand();[m
[32m+[m[32m      var key = Tuple3(ss.helix, ss.dnaend_5p.offset_inclusive, ss.forward);[m
[32m+[m[32m      map[key] = strand;[m
[32m+[m[32m    }[m
[32m+[m[32m    return map.build();[m
[32m+[m[32m  }[m
[32m+[m
 //  _add_helix(HelixUseActionParameters params) {[m
 ////    Helix helix = Helix([m
 ////        grid_position: params.grid_position,[m
[36m@@ -532,7 +545,7 @@[m [mabstract class DNADesign implements Built<DNADesign, DNADesignBuilder>, JSONSeri[m
   }[m
 [m
   /// Return set of substrands on the Helix with the given index.[m
[31m-  BuiltSet<BoundSubstrand> substrands_on_helix(int helix_idx) => helix_idx_to_substrands[helix_idx];[m
[32m+[m[32m  BuiltList<BoundSubstrand> substrands_on_helix(int helix_idx) => helix_idx_to_substrands[helix_idx];[m
 [m
 //  Set<BoundSubstrand> substrands_on_helix_at(int helix_idx, int offset) => helix_idx_to_substrands[helix_idx];[m
 [m
[36m@@ -655,11 +668,11 @@[m [mabstract class DNADesign implements Built<DNADesign, DNADesignBuilder>, JSONSeri[m
   }[m
 }[m
 [m
[31m-BuiltList<BuiltSet<BoundSubstrand>> _construct_helix_idx_to_substrands_map([m
[32m+[m[32mBuiltList<BuiltList<BoundSubstrand>> construct_helix_idx_to_substrands_map([m
     int num_helices, Iterable<Strand> strands) {[m
[31m-  var helix_idx_to_substrands_builder = ListBuilder<SetBuilder<BoundSubstrand>>();[m
[32m+[m[32m  var helix_idx_to_substrands_builder = List<List<BoundSubstrand>>();[m
   for (int _ = 0; _ < num_helices; _++) {[m
[31m-    helix_idx_to_substrands_builder.add(SetBuilder<BoundSubstrand>());[m
[32m+[m[32m    helix_idx_to_substrands_builder.add(List<BoundSubstrand>());[m
   }[m
   for (Strand strand in strands) {[m
     for (Substrand substrand in strand.substrands) {[m
[36m@@ -669,15 +682,18 @@[m [mBuiltList<BuiltSet<BoundSubstrand>> _construct_helix_idx_to_substrands_map([m
       }[m
     }[m
   }[m
[31m-  var helix_idx_to_substrands_builtset_builder = ListBuilder<BuiltSet<BoundSubstrand>>();[m
[31m-  for (var set in helix_idx_to_substrands_builder.build()) {[m
[31m-    helix_idx_to_substrands_builtset_builder.add(set.build());[m
[32m+[m
[32m+[m[32m  var helix_idx_to_substrands_builtset_builder = List<BuiltList<BoundSubstrand>>();[m
[32m+[m[32m  for (var substrands in helix_idx_to_substrands_builder) {[m
[32m+[m[32m    // sort by start offset; since the intervals are disjoint, this sorts them by end as well[m
[32m+[m[32m    substrands.sort((ss1, ss2) => ss1.start - ss2.start);[m
[32m+[m[32m    helix_idx_to_substrands_builtset_builder.add(substrands.build());[m
   }[m
   return helix_idx_to_substrands_builtset_builder.build();[m
 }[m
 [m
 _set_helices_min_max_offsets(List<HelixBuilder> helix_builders, Iterable<Strand> strands) {[m
[31m-  var helix_idx_to_substrands = _construct_helix_idx_to_substrands_map(helix_builders.length, strands);[m
[32m+[m[32m  var helix_idx_to_substrands = construct_helix_idx_to_substrands_map(helix_builders.length, strands);[m
 [m
   for (int idx = 0; idx < helix_builders.length; idx++) {[m
     HelixBuilder helix_builder = helix_builders[idx];[m
[1mdiff --git a/lib/src/state/dna_ends_move.dart b/lib/src/state/dna_ends_move.dart[m
[1mindex 5e835d4..2d3cc0b 100644[m
[1m--- a/lib/src/state/dna_ends_move.dart[m
[1m+++ b/lib/src/state/dna_ends_move.dart[m
[36m@@ -9,7 +9,7 @@[m [mimport 'dna_end.dart';[m
 import 'helix.dart';[m
 import 'strand.dart';[m
 [m
[31m-part 'dna_end_move.g.dart';[m
[32m+[m[32mpart 'dna_ends_move.g.dart';[m
 [m
 abstract class DNAEndsMove with BuiltJsonSerializable implements Built<DNAEndsMove, DNAEndsMoveBuilder> {[m
   factory DNAEndsMove([m
[1mdiff --git a/lib/src/state/strands_move.dart b/lib/src/state/strands_move.dart[m
[1mindex e69de29..3214fa9 100644[m
[1m--- a/lib/src/state/strands_move.dart[m
[1m+++ b/lib/src/state/strands_move.dart[m
[36m@@ -0,0 +1,73 @@[m
[32m+[m[32mimport 'dart:math';[m
[32m+[m
[32m+[m[32mimport 'package:built_collection/built_collection.dart';[m
[32m+[m[32mimport 'package:built_value/built_value.dart';[m
[32m+[m[32mimport 'package:built_value/serializer.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strand.dart';[m
[32m+[m
[32m+[m[32mimport '../serializers.dart';[m
[32m+[m[32mimport 'bound_substrand.dart';[m
[32m+[m[32mimport 'dna_design.dart';[m
[32m+[m[32mimport 'helix.dart';[m
[32m+[m
[32m+[m[32mpart 'strands_move.g.dart';[m
[32m+[m
[32m+[m[32mabstract class StrandsMove with BuiltJsonSerializable implements Built<StrandsMove, StrandsMoveBuilder> {[m
[32m+[m[32m  factory StrandsMove.from([void Function(StrandsMoveBuilder) updates]) = _$StrandsMove;[m
[32m+[m
[32m+[m[32m  StrandsMove._();[m
[32m+[m
[32m+[m[32m  static Serializer<StrandsMove> get serializer => _$strandsMoveSerializer;[m
[32m+[m
[32m+[m[32m  factory StrandsMove([m
[32m+[m[32m      {BuiltList<Strand> strands_moving,[m
[32m+[m[32m      BuiltList<Strand> all_strands,[m
[32m+[m[32m      int original_offset,[m
[32m+[m[32m      Helix helix,[m
[32m+[m[32m      BuiltList<Helix> helices,[m
[32m+[m[32m      bool copy = false}) {[m
[32m+[m[32m    var strands_fixed =[m
[32m+[m[32m        copy ? all_strands : [for (var strand in all_strands) if (!strands_moving.contains(strand)) strand];[m
[32m+[m[32m    return StrandsMove.from((b) => b[m
[32m+[m[32m      ..strands_moving.replace(strands_moving)[m
[32m+[m[32m      ..strands_fixed.replace(strands_fixed)[m
[32m+[m[32m      ..helices.replace(helices)[m
[32m+[m[32m      ..helix.replace(helix)[m
[32m+[m[32m      ..original_offset = original_offset[m
[32m+[m[32m      ..current_offset = original_offset[m
[32m+[m[32m      ..copy = copy[m
[32m+[m[32m      ..allowable = true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /************************ end BuiltValue boilerplate ************************/[m
[32m+[m
[32m+[m[32m  BuiltList<Strand> get strands_moving;[m
[32m+[m
[32m+[m[32m  BuiltList<Strand> get strands_fixed;[m
[32m+[m
[32m+[m[32m  Helix get helix;[m
[32m+[m
[32m+[m[32m  int get original_offset;[m
[32m+[m
[32m+[m[32m  int get current_offset;[m
[32m+[m
[32m+[m[32m  bool get allowable;[m
[32m+[m
[32m+[m[32m  bool get copy;[m
[32m+[m
[32m+[m[32m  BuiltList<Helix> get helices;[m
[32m+[m
[32m+[m[32m  int get num_helices => helices.length;[m
[32m+[m
[32m+[m[32m  int get delta => current_offset - original_offset;[m
[32m+[m
[32m+[m[32m  bool get is_nontrivial => delta != 0;[m
[32m+[m
[32m+[m[32m  @memoized[m
[32m+[m[32m  BuiltList<BuiltList<BoundSubstrand>> get helix_idx_to_substrands_moving =>[m
[32m+[m[32m      construct_helix_idx_to_substrands_map(num_helices, strands_moving);[m
[32m+[m
[32m+[m[32m  @memoized[m
[32m+[m[32m  BuiltList<BuiltList<BoundSubstrand>> get helix_idx_to_substrands_fixed =>[m
[32m+[m[32m      construct_helix_idx_to_substrands_map(num_helices, strands_fixed);[m
[32m+[m[32m}[m
[1mdiff --git a/lib/src/util.dart b/lib/src/util.dart[m
[1mindex 0aa5096..64d550c 100644[m
[1m--- a/lib/src/util.dart[m
[1m+++ b/lib/src/util.dart[m
[36m@@ -33,7 +33,6 @@[m [mimport 'actions/actions.dart' as actions;[m
 const ASSERTION_ERROR_MESSAGE = 'You have discovered a bug. Please send this entire error message to\n'[m
     'https://github.com/UC-Davis-molecular-computing/scadnano/issues';[m
 [m
[31m-[m
 final ColorCycler color_cycler = ColorCycler();[m
 [m
 class ColorCycler {[m
[36m@@ -417,6 +416,27 @@[m [mclass OffsetForward {[m
   OffsetForward(this.offset, this.forward);[m
 }[m
 [m
[32m+[m[32m/// Return helix where click event occured, if any.[m
[32m+[m[32mHelix get_helix(MouseEvent event, BuiltList<Helix> helices) {[m
[32m+[m[32m  var svg_coord;[m
[32m+[m[32m  //XXX: don't know why I need to correct for this here, but not when responding to a selection box mouse event[m
[32m+[m[32m  // might be related to the fact that the mouse coordinates for the selection box are detected outside of React[m
[32m+[m[32m  if (browser.isFirefox) {[m
[32m+[m[32m    svg_coord = event.offset;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    svg_coord = transform_mouse_coord_to_svg_current_panzoom(event.offset, true);[m
[32m+[m[32m  }[m
[32m+[m[32m  num svg_y = svg_coord.y;[m
[32m+[m
[32m+[m[32m  for (Helix helix in helices) {[m
[32m+[m[32m    if (helix.svg_position.y <= svg_y && svg_y <= helix.svg_position.y + constants.BASE_HEIGHT_SVG * 2) {[m
[32m+[m[32m      return helix;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return null;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/// Return offset and direction on helix where click event occurred.[m
 OffsetForward get_offset_forward(MouseEvent event, Helix helix) {[m
   var svg_coord;[m
   //XXX: don't know why I need to correct for this here, but not when responding to a selection box mouse event[m
[1mdiff --git a/lib/src/view/design.dart b/lib/src/view/design.dart[m
[1mindex 45fe04e..d74544c 100644[m
[1m--- a/lib/src/view/design.dart[m
[1m+++ b/lib/src/view/design.dart[m
[36m@@ -9,9 +9,10 @@[m [mimport 'package:js/js.dart';[m
 import 'package:over_react/over_react.dart';[m
 import 'package:over_react/over_react_redux.dart';[m
 import 'package:over_react/react_dom.dart' as react_dom;[m
[31m-import 'package:scadnano/src/state/dna_end_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_ends_move.dart';[m
 import 'package:scadnano/src/state/edit_mode.dart';[m
 import 'package:scadnano/src/state/helix.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strands_move.dart';[m
 [m
 import '../state/app_state.dart';[m
 import '../app.dart';[m
[36m@@ -173,6 +174,7 @@[m [mclass DesignViewComponent {[m
     }[m
 [m
     main_view_svg.onMouseMove.listen((event) {[m
[32m+[m[32m      // move selected DNA ends[m
       DNAEndsMove moves_store = app.store_dna_ends_move.state;[m
       if (moves_store != null) {[m
         Helix helix = moves_store.helix;[m
[36m@@ -182,6 +184,18 @@[m [mclass DesignViewComponent {[m
           app.dispatch(actions.DNAEndsMoveAdjustOffset(offset: offset));[m
         }[m
       }[m
[32m+[m
[32m+[m[32m      // move selected Strands[m
[32m+[m[32m      StrandsMove strands_move = app.state.ui_state.strands_move;[m
[32m+[m[32m      if (strands_move != null) {[m
[32m+[m[32m        Helix helix = strands_move.helix;[m
[32m+[m[32m        int offset = util.get_offset_forward(event, helix).offset;[m
[32m+[m[32m        int old_offset = strands_move.current_offset;[m
[32m+[m[32m        if (offset != old_offset) {[m
[32m+[m[32m          app.dispatch(actions.StrandsMoveAdjustOffset(offset: offset));[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
     });[m
 [m
     // need to install and uninstall Draggable on each cycle of Ctrl/Shift key-down/up,[m
[36m@@ -459,4 +473,12 @@[m [mmain_view_dna_ends_move_stop() {[m
       app.dispatch(actions.DNAEndsMoveCommit(dna_ends_move: dna_ends_move));[m
     }[m
   }[m
[32m+[m[32m  if (app.state.ui_state.strands_move != null) {[m
[32m+[m[32m    StrandsMove strands_move = app.state.ui_state.strands_move;[m
[32m+[m[32m    app.dispatch(actions.StrandsMoveStop());[m
[32m+[m[32m    if (strands_move.allowable && strands_move.is_nontrivial) {[m
[32m+[m[32m      app.dispatch(actions.StrandsMoveCommit(strands_move: strands_move));[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/lib/src/view/design_main.dart b/lib/src/view/design_main.dart[m
[1mindex 9dc552f..e21ea05 100644[m
[1m--- a/lib/src/view/design_main.dart[m
[1m+++ b/lib/src/view/design_main.dart[m
[36m@@ -7,6 +7,8 @@[m [mimport 'package:react/react_client/react_interop.dart';[m
 import 'package:scadnano/src/state/edit_mode.dart';[m
 import 'package:scadnano/src/state/helix.dart';[m
 import 'package:scadnano/src/state/strand.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strands_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/view/design_main_strands_moving.dart';[m
 [m
 import 'design_main_mismatches.dart';[m
 import 'design_main_helices.dart';[m
[36m@@ -32,9 +34,9 @@[m [mUiFactory<_$DesignMainProps> ConnectedDesignMain = connect<AppState, _$DesignMai[m
         ..helices = state.dna_design.helices[m
         ..strands = state.dna_design.strands[m
         ..has_error = state.has_error()[m
[32m+[m[32m        ..edit_modes = state.ui_state.edit_modes[m
[32m+[m[32m        ..strands_move = state.ui_state.strands_move[m
         ..side_selected_helix_idxs = state.ui_state.side_selected_helix_idxs[m
[31m-        ..backbone_edit_mode = state.ui_state.edit_modes.contains(EditModeChoice.backbone)[m
[31m-        ..pencil_edit_mode = state.ui_state.edit_modes.contains(EditModeChoice.pencil)[m
         ..show_mismatches = state.ui_state.show_mismatches[m
         ..show_dna = state.ui_state.show_dna);[m
     }[m
[36m@@ -49,11 +51,11 @@[m [mclass _$DesignMainProps extends UiProps {[m
   BuiltList<Helix> helices;[m
   BuiltList<Strand> strands;[m
   BuiltSet<int> side_selected_helix_idxs;[m
[32m+[m[32m  BuiltSet<EditModeChoice> edit_modes;[m
[32m+[m[32m  StrandsMove strands_move;[m
   bool has_error;[m
   bool show_mismatches;[m
   bool show_dna;[m
[31m-  bool backbone_edit_mode;[m
[31m-  bool pencil_edit_mode;[m
 }[m
 [m
 @Component2()[m
[36m@@ -67,7 +69,7 @@[m [mclass DesignMainComponent extends UiComponent2<DesignMainProps> {[m
     ReactElement main_elt = (Dom.g()..id = 'main-view-group')([[m
       (DesignMainHelices()[m
         ..helices = props.helices[m
[31m-        ..strand_create_enabled = props.pencil_edit_mode[m
[32m+[m[32m        ..strand_create_enabled = props.edit_modes.contains(EditModeChoice.pencil)[m
         ..side_selected_helix_idxs = props.side_selected_helix_idxs[m
         ..key = 'helices')(),[m
       (DesignMainMismatches()[m
[36m@@ -76,8 +78,7 @@[m [mclass DesignMainComponent extends UiComponent2<DesignMainProps> {[m
         ..key = 'mismatches')(),[m
 //      (DesignMainStrands()[m
 //        ..strands = props.strands[m
[31m-      (ConnectedDesignMainStrands()[m
[31m-        ..key = 'strands')(),[m
[32m+[m[32m      (ConnectedDesignMainStrands()..key = 'strands')(),[m
       (DesignMainDNASequences()[m
         ..show_dna = props.show_dna[m
         ..strands = props.strands[m
[36m@@ -90,10 +91,11 @@[m [mclass DesignMainComponent extends UiComponent2<DesignMainProps> {[m
         ..is_main = true[m
         ..id = 'selection-box-main'[m
         ..key = 'selection-box')(),[m
[31m-      if (props.backbone_edit_mode)[m
[32m+[m[32m      if (props.edit_modes.contains(EditModeChoice.backbone))[m
         (DesignMainMouseoverRectHelices()[m
           ..helices = props.helices[m
           ..key = 'mouseover-rect')(),[m
[32m+[m[32m      (ConnectedDesignMainStrandsMoving()..key = 'strands-moving')(),[m
     ]);[m
 [m
     if (USING_REACT_DND) {[m
[1mdiff --git a/lib/src/view/design_main_strand.dart b/lib/src/view/design_main_strand.dart[m
[1mindex b1f98ae..02a336a 100644[m
[1m--- a/lib/src/view/design_main_strand.dart[m
[1m+++ b/lib/src/view/design_main_strand.dart[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mimport 'dart:html';[m
[32m+[m
 import 'package:color/color.dart';[m
 import 'package:over_react/over_react.dart';[m
 import 'package:built_collection/built_collection.dart';[m
[36m@@ -16,7 +18,6 @@[m [mimport 'design_main_strand_insertion.dart';[m
 import 'design_main_strand_paths.dart';[m
 import '../util.dart' as util;[m
 import '../actions/actions.dart' as actions;[m
[31m-import 'design_main_strands.dart';[m
 import 'edit_mode_queryable.dart';[m
 import 'pure_component.dart';[m
 [m
[36m@@ -65,7 +66,8 @@[m [mclass DesignMainStrandComponent extends UiComponent2<DesignMainStrandProps>[m
 [m
     if (strand.substrands.length == 0) {[m
       return null;[m
[31m-    } else {[m
[32m+[m[32m    }[m
[32m+[m
     var classname = 'strand';[m
     if (selectable) {[m
       classname += ' selectable';[m
[36m@@ -94,11 +96,19 @@[m [mclass DesignMainStrandComponent extends UiComponent2<DesignMainStrandProps>[m
       _deletions(strand, side_selected_helix_idxs),[m
     ]);[m
   }[m
[32m+[m
[32m+[m[32m  handle_click_down(react.SyntheticPointerEvent event_syn) {[m
[32m+[m[32m    MouseEvent event = event_syn.nativeEvent;[m
[32m+[m[32m    if (select_mode && props.selectable) {[m
[32m+[m[32m      props.strand.handle_selection_mouse_down(event);[m
     }[m
 [m
[31m-  handle_click_down(react.SyntheticPointerEvent event) {[m
[32m+[m[32m    // set up drag detection for moving DNA ends[m
     if (select_mode && props.selectable) {[m
[31m-      props.strand.handle_selection_mouse_down(event.nativeEvent);[m
[32m+[m[32m      Helix helix = util.get_helix(event, props.helices);[m
[32m+[m[32m      var offset_forward = util.get_offset_forward(event, helix);[m
[32m+[m[32m      int offset = offset_forward.offset;[m
[32m+[m[32m      app.dispatch(actions.StrandsMoveStart(offset: offset, helix: helix));[m
     }[m
 [m
     if (assign_dna_mode) {[m
[36m@@ -196,3 +206,38 @@[m [mFuture<String> ask_for_dna_sequence() async {[m
 [m
 bool should_draw_bound_ss(BoundSubstrand ss, BuiltSet<int> side_selected_helix_idxs) =>[m
     side_selected_helix_idxs.isEmpty || side_selected_helix_idxs.contains(ss.helix);[m
[32m+[m
[32m+[m[32m//  _draw_strand_lines_single_path() {[m
[32m+[m[32m//    if (this.strand.substrands.length == 0) {[m
[32m+[m[32m//      return;[m
[32m+[m[32m//    }[m
[32m+[m[32m//    var substrand = this.strand.substrands.first;[m
[32m+[m[32m//    var helix = app.state.dna_design.helices[substrand.helix_idx];[m
[32m+[m[32m//    var start_svg = helix.svg_base_pos(substrand.offset_5p, substrand.forward);[m
[32m+[m[32m//    var path_cmds = ['M ${start_svg.x} ${start_svg.y}'];[m
[32m+[m[32m//    for (int i = 0; i < this.strand.substrands.length; i++) {[m
[32m+[m[32m//      // substrand line[m
[32m+[m[32m//      var end_svg = helix.svg_base_pos(substrand.offset_3p, substrand.forward);[m
[32m+[m[32m//      path_cmds.add('L ${end_svg.x} ${end_svg.y}');[m
[32m+[m[32m//[m
[32m+[m[32m//      // crossover line/arc[m
[32m+[m[32m//      if (i < this.strand.substrands.length - 1) {[m
[32m+[m[32m//        var old_substrand = substrand;[m
[32m+[m[32m//        substrand = this.strand.substrands[i + 1];[m
[32m+[m[32m//        helix = app.state.dna_design.helices[substrand.helix_idx];[m
[32m+[m[32m//        start_svg = helix.svg_base_pos(substrand.offset_5p, substrand.forward);[m
[32m+[m[32m//        var control = _control_point_for_crossover_bezier_curve(old_substrand, substrand);[m
[32m+[m[32m//        path_cmds.add('Q ${control.x} ${control.y} ${start_svg.x} ${start_svg.y}');[m
[32m+[m[32m//      }[m
[32m+[m[32m//    }[m
[32m+[m[32m//[m
[32m+[m[32m//    var path = svg.PathElement();[m
[32m+[m[32m//    path.attributes = {[m
[32m+[m[32m//      'id': substrand_line_id(substrand),[m
[32m+[m[32m//      'class': 'substrand-line',[m
[32m+[m[32m//      'stroke': strand.color.toRgbColor().toCssString(),[m
[32m+[m[32m//      'fill': 'none',[m
[32m+[m[32m//      'd': path_cmds.join(' '),[m
[32m+[m[32m//    };[m
[32m+[m[32m//    this.root_element.children.add(path);[m
[32m+[m[32m//  }[m
[1mdiff --git a/lib/src/view/design_main_strand_deletion.dart b/lib/src/view/design_main_strand_deletion.dart[m
[1mindex 7552206..e36ed67 100644[m
[1m--- a/lib/src/view/design_main_strand_deletion.dart[m
[1m+++ b/lib/src/view/design_main_strand_deletion.dart[m
[36m@@ -5,11 +5,9 @@[m [mimport 'package:over_react/over_react.dart';[m
 import 'package:scadnano/src/state/bound_substrand.dart';[m
 import 'package:scadnano/src/state/edit_mode.dart';[m
 import 'package:scadnano/src/state/helix.dart';[m
[31m-import 'package:tuple/tuple.dart';[m
 import '../app.dart';[m
 import '../constants.dart' as constants;[m
 import '../actions/actions.dart' as actions;[m
[31m-import 'design_main_strands.dart';[m
 import 'edit_mode_queryable.dart';[m
 import 'pure_component.dart';[m
 [m
[1mdiff --git a/lib/src/view/design_main_strand_dna_end.dart b/lib/src/view/design_main_strand_dna_end.dart[m
[1mindex 893f554..29ead63 100644[m
[1m--- a/lib/src/view/design_main_strand_dna_end.dart[m
[1m+++ b/lib/src/view/design_main_strand_dna_end.dart[m
[36m@@ -122,8 +122,8 @@[m [mclass DesignMainDNAEndComponent extends UiComponent2<DesignMainDNAEndProps>[m
       dna_end.handle_selection_mouse_down(event);[m
     }[m
 [m
[31m-    if (select_mode && props.selectable) {[m
     // set up drag detection for moving DNA ends[m
[32m+[m[32m    if (select_mode && props.selectable) {[m
       app.dispatch(actions.DNAEndsMoveStart(offset: dna_end.offset_inclusive, helix: props.helix));[m
     }[m
   }[m
[1mdiff --git a/lib/src/view/design_main_strand_dna_end_moving.dart b/lib/src/view/design_main_strand_dna_end_moving.dart[m
[1mindex 6b44674..3872c78 100644[m
[1m--- a/lib/src/view/design_main_strand_dna_end_moving.dart[m
[1m+++ b/lib/src/view/design_main_strand_dna_end_moving.dart[m
[36m@@ -6,7 +6,7 @@[m [mimport 'package:over_react/over_react.dart';[m
 import 'package:react/react.dart' as react;[m
 import 'package:scadnano/src/state/dna_end.dart';[m
 [m
[31m-import 'package:scadnano/src/state/dna_end_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_ends_move.dart';[m
 import 'package:scadnano/src/state/helix.dart';[m
 [m
 import '../app.dart';[m
[36m@@ -40,6 +40,7 @@[m [mclass _$EndMovingProps extends UiProps {[m
   bool forward;[m
   Helix helix;[m
   bool is_5p;[m
[32m+[m[32m  bool allowable;[m
 [m
   int current_offset;[m
   bool render;[m
[36m@@ -48,7 +49,9 @@[m [mclass _$EndMovingProps extends UiProps {[m
 @Component2()[m
 class EndMovingComponent extends UiComponent2<EndMovingProps> {[m
   @override[m
[31m-  get defaultProps => (newProps()..render=true);[m
[32m+[m[32m  get defaultProps => (newProps()[m
[32m+[m[32m    ..render = true[m
[32m+[m[32m    ..allowable = true);[m
 [m
   @override[m
   render() {[m
[36m@@ -57,7 +60,8 @@[m [mclass EndMovingComponent extends UiComponent2<EndMovingProps> {[m
     }[m
     Point<num> pos = props.helix.svg_base_pos(props.current_offset, props.forward);[m
     EndEitherPrimeProps end_props = (props.is_5p ? End5Prime() : End3Prime());[m
[31m-    String classname = props.is_5p ? 'five-prime-end-moving' : 'three-prime-end-moving';[m
[32m+[m[32m    String classname = (props.is_5p ? 'five-prime-end-moving' : 'three-prime-end-moving') +[m
[32m+[m[32m        (props.allowable ? '' : ' disallowed-end');[m
     end_props = end_props[m
       ..on_pointer_down = null[m
       ..on_mouse_up = null[m
[1mdiff --git a/lib/src/view/design_main_strand_insertion.dart b/lib/src/view/design_main_strand_insertion.dart[m
[1mindex 3f2c0cf..f0eaf4f 100644[m
[1m--- a/lib/src/view/design_main_strand_insertion.dart[m
[1m+++ b/lib/src/view/design_main_strand_insertion.dart[m
[36m@@ -14,7 +14,6 @@[m [mimport 'package:scadnano/src/state/bound_substrand.dart';[m
 import '../util.dart' as util;[m
 import '../constants.dart' as constants;[m
 import '../actions/actions.dart' as actions;[m
[31m-import 'design_main_strands.dart';[m
 import 'edit_mode_queryable.dart';[m
 import 'pure_component.dart';[m
 [m
[1mdiff --git a/lib/src/view/design_main_strand_moving.dart b/lib/src/view/design_main_strand_moving.dart[m
[1mindex e69de29..e435332 100644[m
[1m--- a/lib/src/view/design_main_strand_moving.dart[m
[1m+++ b/lib/src/view/design_main_strand_moving.dart[m
[36m@@ -0,0 +1,101 @@[m
[32m+[m[32mimport 'package:built_collection/built_collection.dart';[m
[32m+[m[32mimport 'package:over_react/over_react.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/bound_substrand.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_end.dart';[m
[32m+[m
[32m+[m[32mimport 'package:scadnano/src/state/helix.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/loopout.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strand.dart';[m
[32m+[m[32mimport 'package:scadnano/src/view/design_main_strand_dna_end_moving.dart';[m
[32m+[m
[32m+[m[32mimport 'design_main_strand_paths.dart';[m
[32m+[m
[32m+[m[32mpart 'design_main_strand_moving.over_react.g.dart';[m
[32m+[m
[32m+[m[32m@Factory()[m
[32m+[m[32mUiFactory<DesignMainStrandMovingProps> DesignMainStrandMoving = _$DesignMainStrandMoving;[m
[32m+[m
[32m+[m[32m@Props()[m
[32m+[m[32mclass _$DesignMainStrandMovingProps extends UiProps {[m
[32m+[m[32m  Strand strand;[m
[32m+[m[32m  BuiltSet<int> side_selected_helix_idxs;[m
[32m+[m[32m  BuiltList<Helix> helices;[m
[32m+[m[32m  int delta;[m
[32m+[m[32m  bool allowable;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@Component2()[m
[32m+[m[32mclass DesignMainStrandMovingComponent extends UiComponent2<DesignMainStrandMovingProps> {[m
[32m+[m[32m  @override[m
[32m+[m[32m  render() {[m
[32m+[m[32m    if (props.strand.substrands.length == 0) {[m
[32m+[m[32m      return null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    BoundSubstrand first_ss = props.strand.first_bound_substrand();[m
[32m+[m[32m    BoundSubstrand last_ss = props.strand.last_bound_substrand();[m
[32m+[m[32m    DNAEnd end_5p = first_ss.dnaend_5p;[m
[32m+[m[32m    DNAEnd end_3p = last_ss.dnaend_3p;[m
[32m+[m[32m    return (Dom.g()..className = 'strand-moving')([[m
[32m+[m[32m//        (ConnectedDesignMainStrandPaths()[m
[32m+[m[32m      _draw_strand_lines_single_path(),[m
[32m+[m[32m      (EndMoving()[m
[32m+[m[32m        ..dna_end = end_5p[m
[32m+[m[32m        ..original_offset = end_5p.offset_inclusive[m
[32m+[m[32m        ..color = props.strand.color[m
[32m+[m[32m        ..forward = first_ss.forward[m
[32m+[m[32m        ..helix = props.helices[first_ss.helix][m
[32m+[m[32m        ..is_5p = true[m
[32m+[m[32m        ..allowable = props.allowable[m
[32m+[m[32m        ..current_offset = end_5p.offset_inclusive + props.delta[m
[32m+[m[32m        ..key = 'end-5p')(),[m
[32m+[m[32m      (EndMoving()[m
[32m+[m[32m        ..dna_end = end_3p[m
[32m+[m[32m        ..original_offset = end_3p.offset_inclusive[m
[32m+[m[32m        ..color = props.strand.color[m
[32m+[m[32m        ..forward = last_ss.forward[m
[32m+[m[32m        ..helix = props.helices[last_ss.helix][m
[32m+[m[32m        ..is_5p = false[m
[32m+[m[32m        ..allowable = props.allowable[m
[32m+[m[32m        ..current_offset = end_3p.offset_inclusive + props.delta[m
[32m+[m[32m        ..key = 'end-3p')(),[m
[32m+[m[32m    ]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  ReactElement _draw_strand_lines_single_path() {[m
[32m+[m[32m    BoundSubstrand substrand = props.strand.first_bound_substrand();[m
[32m+[m[32m    int delta = props.delta;[m
[32m+[m
[32m+[m[32m    var helix = props.helices[substrand.helix];[m
[32m+[m[32m    var start_svg = helix.svg_base_pos(substrand.offset_5p + delta, substrand.forward);[m
[32m+[m[32m    var path_cmds = ['M ${start_svg.x} ${start_svg.y}'];[m
[32m+[m
[32m+[m[32m    var bound_substrands = props.strand.bound_substrands();[m
[32m+[m[32m    for (int i = 0; i < bound_substrands.length; i++) {[m
[32m+[m[32m      // substrand line[m
[32m+[m[32m      var end_svg = helix.svg_base_pos(substrand.offset_3p + delta, substrand.forward);[m
[32m+[m[32m      path_cmds.add('L ${end_svg.x} ${end_svg.y}');[m
[32m+[m
[32m+[m[32m      // crossover/loopout line/arc[m
[32m+[m[32m      if (i < bound_substrands.length - 1) {[m
[32m+[m[32m        var old_substrand = substrand;[m
[32m+[m[32m        substrand = bound_substrands[i + 1];[m
[32m+[m[32m        helix = props.helices[substrand.helix];[m
[32m+[m[32m        start_svg = helix.svg_base_pos(substrand.offset_5p + delta, substrand.forward);[m
[32m+[m[32m        var control = control_point_for_crossover_bezier_curve(old_substrand, substrand, delta: delta);[m
[32m+[m[32m        path_cmds.add('Q ${control.x} ${control.y} ${start_svg.x} ${start_svg.y}');[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    int key = 0;[m
[32m+[m[32m    var path = (Dom.path()[m
[32m+[m[32m//      ..id= substrand_line_id(substrand),[m
[32m+[m[32m      ..className = 'substrand-line' + (props.allowable ? '' : ' disallowed')[m
[32m+[m[32m      ..stroke = props.strand.color.toRgbColor().toCssString()[m
[32m+[m[32m      ..fill = 'none'[m
[32m+[m[32m      ..d = path_cmds.join(' ')[m
[32m+[m[32m      ..key = key++)();[m
[32m+[m
[32m+[m[32m    return path;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/lib/src/view/design_main_strand_paths.dart b/lib/src/view/design_main_strand_paths.dart[m
[1mindex 45da50d..3f86ce2 100644[m
[1m--- a/lib/src/view/design_main_strand_paths.dart[m
[1m+++ b/lib/src/view/design_main_strand_paths.dart[m
[36m@@ -19,7 +19,6 @@[m [mimport 'design_main_strand_dna_end.dart';[m
 import 'design_main_strand_bound_substrand.dart';[m
 import 'design_main_strand_loopout.dart';[m
 import 'design_main_strand_crossover.dart';[m
[31m-import 'design_main_strands.dart';[m
 import 'pure_component.dart';[m
 [m
 part 'design_main_strand_paths.over_react.g.dart';[m
[36m@@ -164,7 +163,7 @@[m [mString crossover_path_description(BoundSubstrand prev_substrand, BoundSubstrand[m
   var prev_helix = app.state.dna_design.helices[prev_substrand.helix];[m
   var next_helix = app.state.dna_design.helices[next_substrand.helix];[m
   var start_svg = prev_helix.svg_base_pos(prev_substrand.offset_3p, prev_substrand.forward);[m
[31m-  var control = _control_point_for_crossover_bezier_curve(prev_substrand, next_substrand);[m
[32m+[m[32m  var control = control_point_for_crossover_bezier_curve(prev_substrand, next_substrand);[m
   var end_svg = next_helix.svg_base_pos(next_substrand.offset_5p, next_substrand.forward);[m
 [m
   var path = 'M ${start_svg.x} ${start_svg.y} Q ${control.x} ${control.y} ${end_svg.x} ${end_svg.y}';[m
[36m@@ -172,12 +171,12 @@[m [mString crossover_path_description(BoundSubstrand prev_substrand, BoundSubstrand[m
   return path;[m
 }[m
 [m
[31m-Point<num> _control_point_for_crossover_bezier_curve(BoundSubstrand from_ss, BoundSubstrand to_ss) {[m
[32m+[m[32mPoint<num> control_point_for_crossover_bezier_curve(BoundSubstrand from_ss, BoundSubstrand to_ss, {int delta = 0}) {[m
   var helix_distance = (from_ss.helix - to_ss.helix).abs();[m
   var from_helix = app.state.dna_design.helices[from_ss.helix];[m
   var to_helix = app.state.dna_design.helices[to_ss.helix];[m
[31m-  var start_pos = from_helix.svg_base_pos(from_ss.offset_3p, from_ss.forward);[m
[31m-  var end_pos = to_helix.svg_base_pos(to_ss.offset_5p, to_ss.forward);[m
[32m+[m[32m  var start_pos = from_helix.svg_base_pos(from_ss.offset_3p + delta, from_ss.forward);[m
[32m+[m[32m  var end_pos = to_helix.svg_base_pos(to_ss.offset_5p + delta, to_ss.forward);[m
   bool from_strand_below = from_ss.helix - to_ss.helix > 0;[m
   num midX = (start_pos.x + end_pos.x) / 2;[m
   num midY = (start_pos.y + end_pos.y) / 2;[m
[1mdiff --git a/lib/src/view/design_main_strands.dart b/lib/src/view/design_main_strands.dart[m
[1mindex f84e6a1..4af6fb3 100644[m
[1m--- a/lib/src/view/design_main_strands.dart[m
[1m+++ b/lib/src/view/design_main_strands.dart[m
[36m@@ -1,8 +1,6 @@[m
 import 'package:over_react/over_react.dart';[m
 import 'package:built_collection/built_collection.dart';[m
 import 'package:over_react/over_react_redux.dart';[m
[31m-import 'package:scadnano/src/reducers/edit_modes_reducer.dart';[m
[31m-import 'package:scadnano/src/state/bound_substrand.dart';[m
 import 'package:scadnano/src/state/edit_mode.dart';[m
 import 'package:scadnano/src/state/helix.dart';[m
 import 'package:scadnano/src/state/select_mode.dart';[m
[36m@@ -45,16 +43,9 @@[m [mclass _$DesignMainStrandsProps extends UiProps {[m
 [m
 @Component2()[m
 class DesignMainStrandsComponent extends UiComponent2<DesignMainStrandsProps> {[m
[31m-//  @override[m
[31m-//  bool shouldComponentUpdate(Map nextProps, Map nextState) {[m
[31m-//    BuiltList<Strand> strands = nextProps['DesignMainStrandsProps.strands'];[m
[31m-//    return !(props.strands == strands);[m
[31m-//  }[m
 [m
   @override[m
   render() {[m
[31m-//    AppUIState ui_state = props.state.ui_state;[m
[31m-    bool;[m
     return (Dom.g()..className = 'strands-main-view')([[m
       for (var strand in props.strands)[m
 //        (ConnectedDesignMainStrand()[m
[1mdiff --git a/lib/src/view/design_main_strands_moving.dart b/lib/src/view/design_main_strands_moving.dart[m
[1mindex 7311d4f..17c9962 100644[m
[1m--- a/lib/src/view/design_main_strands_moving.dart[m
[1m+++ b/lib/src/view/design_main_strands_moving.dart[m
[36m@@ -1,73 +1,49 @@[m
 import 'package:over_react/over_react.dart';[m
 import 'package:built_collection/built_collection.dart';[m
 import 'package:over_react/over_react_redux.dart';[m
[31m-import 'package:scadnano/src/state/edit_mode.dart';[m
 import 'package:scadnano/src/state/helix.dart';[m
[31m-import 'package:scadnano/src/state/select_mode.dart';[m
[31m-import 'package:scadnano/src/state/select_mode_state.dart';[m
[31m-import 'package:scadnano/src/state/selectable.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/strands_move.dart';[m
 [m
 import '../state/app_state.dart';[m
 import '../state/strand.dart';[m
[31m-import 'design_main_strand.dart';[m
[32m+[m[32mimport 'design_main_strand_moving.dart';[m
 [m
[31m-part 'design_main_strands.over_react.g.dart';[m
[32m+[m[32mpart 'design_main_strands_moving.over_react.g.dart';[m
 [m
[31m-UiFactory<DesignMainStrandsProps> ConnectedDesignMainStrands =[m
[31m-    connect<AppState, DesignMainStrandsProps>(mapStateToProps: (state) {[m
[31m-  return DesignMainStrands()[m
[31m-    ..strands = state.dna_design.strands[m
[32m+[m[32mUiFactory<DesignMainStrandsMovingProps> ConnectedDesignMainStrandsMoving =[m
[32m+[m[32m    connect<AppState, DesignMainStrandsMovingProps>(mapStateToProps: (state) {[m
[32m+[m[32m  return DesignMainStrandsMoving()[m
[32m+[m[32m    ..strands_move = state.ui_state.strands_move[m
     ..helices = state.dna_design.helices[m
[31m-    ..side_selected_helix_idxs = state.ui_state.side_selected_helix_idxs[m
[31m-    ..selectables_store = state.ui_state.selectables_store[m
[31m-    ..select_mode_state = state.ui_state.select_mode_state[m
[31m-    ..edit_modes = state.ui_state.edit_modes[m
[31m-    ..drawing_potential_crossover = state.ui_state.drawing_potential_crossover[m
[31m-    ..moving_dna_ends = state.ui_state.moving_dna_ends;[m
[31m-})(DesignMainStrands);[m
[32m+[m[32m    ..side_selected_helix_idxs = state.ui_state.side_selected_helix_idxs;[m
[32m+[m[32m})(DesignMainStrandsMoving);[m
 [m
 @Factory()[m
[31m-UiFactory<DesignMainStrandsProps> DesignMainStrands = _$DesignMainStrands;[m
[32m+[m[32mUiFactory<DesignMainStrandsMovingProps> DesignMainStrandsMoving = _$DesignMainStrandsMoving;[m
 [m
 @Props()[m
[31m-class _$DesignMainStrandsProps extends UiProps {[m
[31m-  BuiltList<Strand> strands;[m
[32m+[m[32mclass _$DesignMainStrandsMovingProps extends UiProps {[m
[32m+[m[32m  StrandsMove strands_move;[m
   BuiltList<Helix> helices;[m
   BuiltSet<int> side_selected_helix_idxs;[m
[31m-  SelectablesStore selectables_store;[m
[31m-  SelectModeState select_mode_state;[m
[31m-  BuiltSet<EditModeChoice> edit_modes;[m
[31m-  bool drawing_potential_crossover;[m
[31m-  bool moving_dna_ends;[m
 }[m
 [m
 @Component2()[m
[31m-class DesignMainStrandsComponent extends UiComponent2<DesignMainStrandsProps> {[m
[31m-//  @override[m
[31m-//  bool shouldComponentUpdate(Map nextProps, Map nextState) {[m
[31m-//    BuiltList<Strand> strands = nextProps['DesignMainStrandsProps.strands'];[m
[31m-//    return !(props.strands == strands);[m
[31m-//  }[m
[31m-[m
[32m+[m[32mclass DesignMainStrandsMovingComponent extends UiComponent2<DesignMainStrandsMovingProps> {[m
   @override[m
   render() {[m
[31m-//    AppUIState ui_state = props.state.ui_state;[m
[31m-    bool;[m
[31m-    return (Dom.g()..className = 'strands-main-view')([[m
[31m-      for (var strand in props.strands)[m
[31m-//        (ConnectedDesignMainStrand()[m
[31m-        (DesignMainStrand()[m
[32m+[m[32m    if (props.strands_move == null) {[m
[32m+[m[32m      return null;[m
[32m+[m[32m    }[m
[32m+[m[32m    return (Dom.g()[m
[32m+[m[32m      ..className = 'strands-moving-main-view' + (props.strands_move.allowable ? '' : ' disallowed'))([[m
[32m+[m[32m      for (var strand in props.strands_move.strands_moving)[m
[32m+[m[32m        (DesignMainStrandMoving()[m
           ..strand = strand[m
[32m+[m[32m          ..delta = props.strands_move.delta[m
           ..side_selected_helix_idxs = props.side_selected_helix_idxs[m
[31m-          ..selected = props.selectables_store.selected(strand)[m
[31m-          ..selectable = props.select_mode_state.modes.contains(SelectModeChoice.strand) &&[m
[31m-              props.edit_modes.contains(EditModeChoice.select)[m
           ..helices = props.helices[m
[31m-          ..selectables_store = props.selectables_store[m
[31m-          ..select_mode_state = props.select_mode_state[m
[31m-          ..edit_modes = props.edit_modes[m
[31m-          ..drawing_potential_crossover = props.drawing_potential_crossover[m
[31m-          ..moving_dna_ends = props.moving_dna_ends[m
[32m+[m[32m          ..allowable = props.strands_move.allowable[m
           ..key = strand.toString())()[m
     ]);[m
   }[m
[1mdiff --git a/test/reducer_test.dart b/test/reducer_test.dart[m
[1mindex 7bb1395..7f7bfaa 100644[m
[1m--- a/test/reducer_test.dart[m
[1m+++ b/test/reducer_test.dart[m
[36m@@ -11,7 +11,7 @@[m [mimport 'package:scadnano/src/state/app_ui_state.dart';[m
 import 'package:scadnano/src/state/bound_substrand.dart';[m
 import 'package:scadnano/src/state/dna_design.dart';[m
 import 'package:scadnano/src/state/dna_end.dart';[m
[31m-import 'package:scadnano/src/state/dna_end_move.dart';[m
[32m+[m[32mimport 'package:scadnano/src/state/dna_ends_move.dart';[m
 import 'package:scadnano/src/state/grid.dart';[m
 import 'package:scadnano/src/state/grid_position.dart';[m
 import 'package:scadnano/src/state/helix.dart';[m
[1mdiff --git a/web/styles.css b/web/styles.css[m
[1mindex 2f7b259..e627a22 100644[m
[1m--- a/web/styles.css[m
[1m+++ b/web/styles.css[m
[36m@@ -346,6 +346,15 @@[m [mhtml, body {[m
     filter: url("#shadow");[m
 }[m
 [m
[32m+[m[32m.disallowed {[m[41m[m
[32m+[m[32m    stroke: lightgray;[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.disallowed-end {[m[41m[m
[32m+[m[32m    stroke: lightgray;[m[41m[m
[32m+[m[32m    fill: lightgray;[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[41m[m
 .selected.side-view-helix-circle {[m
     stroke: red;[m
     fill: hotpink;[m
